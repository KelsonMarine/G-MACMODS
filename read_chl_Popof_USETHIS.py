'''The data csv for this comes from read_newchlorophyll.py where I had to do some processing because of the format of the AOOS website. The output of that
file was turned into a list (in read_chl_input_lst.py) and then I took the values from the list and copied them into a CSV file which is read in here. There are two Popof Islands in AK and
I initially did it for the wrong one so when it says "wrong Popof" that's what it means, but it is now done for the Popof Island near Kodiak, AK which is correct.
data source: https://portal.aoos.org/#module-metadata/5d7b00c1-73c7-4861-af87-a7857c358d02/4779f835-7bd3-4f92-841a-e419c4e9e2c3
'''


import pandas as pd
#this is the initial time I did it with the wrong Popof:
# chl_data = [0.13045907, 0.12243599, 0.12231227, 0.12063584, 0.11705224, 0.12002068, 0.12235399, 0.12378917, 0.11942121, 0.11669117, 0.11345736, 0.11048342, 0.11296159, 0.11727691, 0.12045044, 0.1216096, 0.1231519, 0.13134326, 0.13648246, 0.13635331, 0.13686283, 0.1423671, 0.1498445, 0.16010597, 0.17050366, 0.17003275, 0.16712572, 0.16497856, 0.15770823, 0.15334167, 0.15630873, 0.16513525, 0.1720998, 0.17670731, 0.18015802, 0.18472329, 0.18464375, 0.1835032, 0.1404764, 0.12784691, 0.14226174, 0.16787224, 0.18474832, 0.19231252, 0.19675162, 0.20235, 0.21154185, 0.18182579, 0.16050068, 0.17244282, 0.18122634, 0.19229086, 0.2116606, 0.24096571, 0.29830617, 0.34890735, 0.35096008, 0.3741332, 0.40757275, 0.4061223, 0.25902188, 0.25194874, 0.30958745, 0.35328677, 0.34979483, 0.3633646, 0.41159588, 0.44910088, 0.51515895, 0.56462395, 0.59664124, 0.669855, 0.66437346, 0.56385136, 0.594022, 0.6749708, 0.70896524, 0.75048673, 0.8093148, 0.86087155, 0.9443362, 1.0349228, 1.090418, 1.1304789, 1.1732846, 1.1934173, 1.2074921, 1.141238, 0.9668617, 0.942031, 1.0169243, 1.1310046, 1.2784364, 1.3533452, 1.3066082, 1.3576995, 1.3796073, 1.4536831, 1.2950586, 1.1775053, 1.2239304, 1.411829, 1.4853554, 1.6318604, 1.7692397, 1.7477908, 1.7645202, 1.595106, 1.4621998, 1.4880261, 1.5966345, 1.7527506, 1.9114463, 2.232462, 2.4542294, 2.4870434, 2.7686973, 3.16664, 3.4817753, 3.373094, 3.1431103, 3.2112474, 2.9541068, 3.1012783, 3.417183, 3.4813387, 3.4200995, 3.4013925, 3.2153826, 3.080287, 2.9708614, 2.8072653, 2.7027712, 2.5864174, 2.4712954, 2.6944535, 2.5582016, 2.3893578, 2.1546373, 1.8630685, 1.5274038, 1.3178529, 1.2337011, 1.2297943, 1.257891, 1.2297362, 1.271589, 1.2759887, 1.3623488, 1.6040112, 1.7130849, 1.7649572, 2.0903947, 2.0771794, 2.0670195, 1.9412748, 1.873289, 1.8049183, 1.7401155, 1.6638525, 1.7805882, 1.8329102, 1.6696274, 1.5493504, 1.6009846, 1.6699067, 1.7224604, 2.0247087, 2.0508072, 1.9086155, 1.6673995, 1.6023308, 1.732258, 1.8312249, 1.7099676, 1.5850698, 1.4473431, 1.3227323, 1.3316092, 1.2157063, 1.1538966, 1.2012213, 1.2556882, 1.2624167, 1.2093017, 1.1504918, 1.0741525, 1.1762178, 1.1654755, 1.2026235, 1.4071746, 1.4392112, 1.4032365, 1.468125, 1.5356414, 1.6561965, 1.9356532, 2.0487363, 1.969734, 2.1227026, 2.1184506, 1.8867275, 1.782437, 1.6713758, 1.3997356, 1.243115, 1.187986, 1.1965151, 1.302591, 1.4253991, 1.1399528, 1.0229157, 1.2336087, 1.3896892, 1.7374285, 1.6685983, 1.6299931, 1.6126615, 1.3064649, 0.9036712, 0.84264004, 1.0898898, 1.1454556, 1.1668153, 1.3276367, 1.6492736, 1.899788, 2.4242966, 2.3276474, 1.9600639, 1.7307832, 1.7948389, 2.3920505, 2.4613233, 2.1007736, 1.9446894, 1.92814, 1.8506644, 1.6390712, 1.4067664, 1.4005753, 1.4132155, 1.0204686, 0.748572, 0.72196746, 0.8404954, 1.0047642, 0.967637, 1.2559965, 1.4603393, 1.301949, 1.0920156, 1.0981845, 1.5098512, 1.5705128, 1.6728526, 1.6476501, 1.5090747, 1.5090747, 1.3999107, 1.3790158, 1.3470634, 1.1897105, 1.2099874, 1.2455497, 1.2171175, 1.3023053, 1.3868767, 1.3670331, 1.3716921, 1.4311112, 1.4931529, 1.3755716, 1.4586614, 1.4678758, 1.3834189, 1.3049791, 1.1553869, 1.1638178, 1.2408776, 1.1980097, 1.0010393, 0.96279895, 0.96640015, 0.9672797, 0.95525765, 1.0053558, 1.050324, 1.1151568, 1.1529077, 1.0812404, 0.9971147, 0.9327205, 0.9256233, 0.96414983, 1.0501099, 0.951592, 0.8876146, 0.81962, 0.8112526, 0.7830138, 0.7852058, 0.7754624, 0.7927428, 0.78820133, 0.7587241, 0.77812266, 0.8181577, 0.781456, 0.7163215, 0.6418047, 0.57350934, 0.53534925, 0.53249156, 0.4789009, 0.3916055, 0.29270586, 0.2620475, 0.25480837, 0.26842314, 0.3008088, 0.3085701, 0.26059434, 0.24842465, 0.23751065, 0.21982807, 0.23879835, 0.25482792, 0.24502221, 0.17434682, 0.16088629, 0.1656582, 0.17070338, 0.1917175, 0.19703718, 0.2161141, 0.22988632, 0.22514275, 0.22636501, 0.23069955, 0.23859529, 0.22791168, 0.21758205, 0.20784293, 0.19470268, 0.18675727, 0.19476569, 0.19369274, 0.1985, 0.20102744, 0.19119237, 0.18690209, 0.18616174, 0.18633409, 0.18406174, 0.18000056, 0.1519686, 0.15104075, 0.15073755, 0.15290563, 0.15589415, 0.15222402, 0.13996378, 0.13260166, 0.1342077, 0.13458905]
# dates_2020 = pd.date_range(start = "2020-01-01", end = "2020-12-31", freq = "D")
# df = pd.DataFrame({"Date":dates_2020, "Value": chl_data})
# df.to_csv("../Kodiak files/env. inputs/chl_data_Popof.csv")

#this is with the correct Popof: lat=57.7, lon=-152
# chl_data = [0.08151728, 0.08273045, 0.08233904, 0.08321196, 0.08424785, 0.08330558, 0.08187519, 0.082400195, 0.08397261, 0.08375722, 0.07641619, 0.07613535, 0.07599651, 0.08271681, 0.08608846, 0.08747698, 0.09059358, 0.09338904, 0.09112414, 0.09297903, 0.09522457, 0.09813333, 0.0972467, 0.09622304, 0.10059516, 0.105321035, 0.10686964, 0.103059955, 0.10277527, 0.10682264, 0.112910815, 0.1165955, 0.122908376, 0.13373205, 0.1416967, 0.14447755, 0.1440365, 0.15101954, 0.16005501, 0.16839372, 0.17662889, 0.17767103, 0.18833612, 0.19908835, 0.20506166, 0.22027081, 0.23443401, 0.26018557, 0.28899834, 0.2711214, 0.30738804, 0.3313253, 0.33974323, 0.34606844, 0.34684944, 0.37673303, 0.41502893, 0.45259652, 0.5196427, 0.50255895, 0.5499906, 0.62909526, 0.641249, 0.68208605, 0.74647576, 0.8051372, 0.78566456, 0.83868515, 0.9427388, 1.0283889, 1.071081, 1.072929, 1.1224909, 1.1818407, 1.1875458, 1.2546873, 1.4016433, 1.4539675, 1.357404, 1.4367908, 1.5799001, 1.6017252, 1.6354275, 1.6836118, 1.777064, 1.7357777, 1.6296648, 1.6474059, 1.7456355, 1.8248079, 2.0318813, 2.0455866, 1.9967064, 2.012275, 2.086965, 2.128562, 2.092456, 2.0625744, 1.9824817, 1.876071, 1.9967064, 2.012275, 2.086965, 2.128562, 2.092456, 2.0625744, 1.9824817, 1.876071, 1.877342, 1.9951133, 2.1163955, 2.1760526, 2.2274435, 2.1337492, 2.2619805, 2.450979, 2.3942487, 2.2105548, 2.0858781, 2.1445043, 2.317234, 2.411625, 2.4489512, 2.5254836, 2.6440759, 2.8313818, 2.7585185, 2.5414422, 2.515739, 2.3746562, 2.3447108, 2.1040995, 2.134538, 2.2760623, 2.657377, 2.9642403, 2.921534, 2.649367, 2.3161612, 2.4160175, 2.2357986, 2.0702443, 2.1699991, 1.9232879, 1.869432, 1.7994556, 1.7569901, 1.8216327, 2.0706606, 2.2228937, 2.2275996, 2.2528243, 2.3195295, 2.2808774, 2.0077777, 1.8391651, 1.6660959, 1.6097445, 1.6858273, 1.6893914, 1.6939099, 1.7656299, 1.7253294, 1.7045372, 1.6974798, 1.7104514, 1.7458154, 1.6747918, 1.8114567, 1.6394014, 1.3629589, 1.3144463, 1.3546376, 1.4321197, 1.5142626, 1.5422797, 1.4789371, 1.5846319, 1.4694948, 1.4469897, 1.5067562, 1.4541228, 1.4327054, 1.4850386, 1.591895, 1.8510647, 1.9323637, 1.9865094, 1.9493192, 1.8114862, 1.7093865, 1.749906, 1.6883518, 1.7450975, 1.8088584, 1.6621515, 1.4118285, 1.3659264, 1.4863698, 1.5975124, 1.6742207, 1.584193, 1.4347769, 1.3949606, 1.4916881, 1.5912552, 1.5903986, 1.55111, 1.4303464, 1.3747712, 1.3828001, 1.3789788, 1.4557762, 1.4856601, 1.4439962, 1.4004474, 1.4404856, 1.3939039, 1.3311455, 1.2738901, 1.272881, 1.2910075, 1.3171743, 1.3394092, 1.3807155, 1.3772213, 1.3770775, 1.3792968, 1.4524372, 1.5263104, 1.5462708, 1.6489458, 1.5929587, 1.5889311, 1.6467268, 1.6791718, 1.683374, 1.5983083, 1.5343107, 1.5222769, 1.4659553, 1.3614715, 1.3238176, 1.2446785, 1.0181423, 0.95904577, 1.2034813, 1.2980821, 1.2890712, 1.3137841, 1.2758727, 1.1240999, 1.1933725, 1.3272204, 1.3096516, 1.3208447, 1.2944478, 1.3598716, 1.5780272, 1.6895007, 1.61423, 1.4340508, 1.4000198, 1.416412, 1.401218, 1.4102986, 1.2172525, 1.1521978, 1.0842738, 1.1309258, 1.1546068, 1.0895157, 1.1693306, 1.1235234, 1.045617, 0.98698676, 0.83905345, 0.75653833, 0.81102073, 0.8702796, 0.87143564, 0.8713471, 0.8449439, 0.8112694, 0.8157962, 0.8552016, 0.9382625, 0.9901461, 1.00715, 1.0189936, 1.0248407, 1.0577348, 1.0634817, 1.0936435, 1.1256903, 1.1302576, 1.1005027, 1.0295848, 0.9116526, 0.8540712, 0.8186948, 0.8176576, 0.834683, 0.8380998, 0.8194304, 0.7716364, 0.7323717, 0.7280281, 0.7382087, 0.7159533, 0.6692171, 0.63427275, 0.58817405, 0.5507951,  0.5223236, 0.53692317, 0.5068611, 0.4655334, 0.4325338, 0.4460079, 0.47978356, 0.50396216, 0.45324734, 0.4447377, 0.42810076, 0.40262476, 0.3755305, 0.35076368, 0.31723377, 0.31008503, 0.30264473, 0.29463246, 0.286692, 0.28364006, 0.27703428, 0.27075455, 0.25605682, 0.24227794, 0.23386721, 0.23063904, 0.22720127, 0.21681698, 0.21234708, 0.20443596, 0.20104672, 0.19512846, 0.18632174, 0.18012342, 0.17040254, 0.16550864, 0.16153759, 0.15749577, 0.15209298, 0.14221352, 0.13857351, 0.137173, 0.13513845, 0.13363387, 0.12734242, 0.12209629, 0.11989303, 0.115795955, 0.113437206, 0.10685697, 0.10539436, 0.095660225]
# dates_2020 = pd.date_range(start = "2020-01-01", end = "2020-12-31", freq = "D")
# df = pd.DataFrame({"Date": dates_2020, "Value": chl_data})
# df.to_csv("../Kodiak files/env. inputs/chl_data_Popof.csv")

df = pd.read_csv("../Kodiak files/env. inputs/chl_data_Popof.csv")
df["Date"] = pd.to_datetime(df["Date"])
df = df.set_index("Date")
df["chl_conc"] = df["Value"]
print(df)
df.to_parquet("Popof input data/chl_popof.parquet")